{"ast":null,"code":"var _jsxFileName = \"/home/rounak-dagar/securechat/frontend/src/components/Chat/ChatContainer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n// --- MOCK SERVICES ---\n// NOTE: To resolve the import errors, these are placeholder implementations\n// for the services that would exist in your app. Your original logic remains intact.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst usersAPI = {\n  getAllUsers: async () => {\n    console.log(\"Mock usersAPI.getAllUsers called\");\n    return {\n      data: [{\n        username: 'Alice',\n        isOnline: true,\n        publicKey: 'key_alice'\n      }, {\n        username: 'Bob',\n        isOnline: false,\n        publicKey: 'key_bob'\n      }]\n    };\n  }\n};\nconst messagesAPI = {\n  getConversation: async username => {\n    console.log(`Mock messagesAPI.getConversation called for ${username}`);\n    return {\n      data: []\n    };\n  },\n  sendMessage: async messageData => {\n    console.log(\"Mock messagesAPI.sendMessage called with:\", messageData);\n    return Promise.resolve();\n  }\n};\nconst getSocket = () => ({\n  on: (event, callback) => console.log(`Socket listener attached for: ${event}`),\n  off: event => console.log(`Socket listener detached for: ${event}`),\n  emit: (event, data) => console.log(`Socket emitting ${event}:`, data)\n});\nconst hybridEncryptMessage = async (text, key) => {\n  console.log(\"Mock hybridEncryptMessage called\");\n  return {\n    encryptedMessage: `encrypted(${text})`,\n    encryptedAESKey: 'mock_aes_key'\n  };\n};\nconst hybridDecryptMessage = async (encrypted, aesKey, privateKey) => {\n  console.log(\"Mock hybridDecryptMessage called\");\n  if (typeof encrypted === 'string' && encrypted.startsWith('encrypted(')) {\n    return encrypted.substring(10, encrypted.length - 1);\n  }\n  return '[Decrypted Message]';\n};\nconst decryptPrivateKeyAES = async (encryptedKey, passphrase) => {\n  console.log('Mock decryptPrivateKeyAES called');\n  if (passphrase) {\n    return '---BEGIN PGP PRIVATE KEY BLOCK---...';\n  }\n  throw new Error(\"Mock decryption failed\");\n};\n\n// --- STYLES ---\n// The component's styles have been updated to match the provided app.css file.\n// Additional styles have been added for elements not covered in the original CSS\n// to ensure a complete and polished UI, while respecting the light-theme design.\nconst Style = () => /*#__PURE__*/_jsxDEV(\"style\", {\n  children: `\n    /* Base styles from your app.css */\n    .chat-container-wrapper {\n      font-family: Arial, sans-serif;\n      background: #fff;\n      border-radius: 8px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n      border: 1px solid #eee;\n      display: flex;\n      height: 80vh;\n      width: 100%;\n      max-width: 900px;\n      margin: 0 auto;\n      overflow: hidden;\n    }\n\n    .user-list {\n      width: 250px;\n      border-right: 1px solid #eee;\n      display: flex;\n      flex-direction: column;\n      background-color: #fcfcfc;\n    }\n    \n    .user-list-header {\n      padding: 15px;\n      font-size: 1.2rem;\n      font-weight: bold;\n      border-bottom: 1px solid #eee;\n      color: #333;\n    }\n\n    .user-list-body {\n      overflow-y: auto;\n      flex-grow: 1;\n    }\n    \n    .user-item {\n      display: flex;\n      align-items: center;\n      padding: 12px 15px;\n      cursor: pointer;\n      border-bottom: 1px solid #f0f0f0;\n      transition: background-color 0.2s;\n    }\n    \n    .user-item:hover {\n      background-color: #f1f1f1;\n    }\n\n    .user-item.selected {\n      background-color: #1976d2;\n      color: white;\n    }\n    .user-item.selected .user-name,\n    .user-item.selected .user-preview {\n      color: white;\n    }\n\n    .avatar {\n      width: 40px;\n      height: 40px;\n      border-radius: 50%;\n      background-color: #1976d2;\n      color: white;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-right: 12px;\n      font-weight: bold;\n    }\n    \n    .user-info {\n      overflow: hidden;\n    }\n\n    .user-name {\n      font-weight: bold;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .user-preview {\n      font-size: 0.85em;\n      color: #888;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .chat-main {\n      flex-grow: 1;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .chat-header {\n      display: flex;\n      align-items: center;\n      padding: 10px 20px;\n      border-bottom: 1px solid #eee;\n      background: #fdfdfd;\n    }\n    \n    .chat-header .user-name {\n      font-size: 1.1em;\n    }\n\n    .messages {\n      flex-grow: 1;\n      overflow-y: auto;\n      background: #fafafa;\n      padding: 20px;\n      display: flex;\n      flex-direction: column-reverse; /* To keep view at the bottom */\n    }\n    \n    .message-list-inner {\n      display: flex;\n      flex-direction: column;\n      gap: 12px;\n    }\n\n    .message {\n      display: flex;\n      max-width: 75%;\n    }\n\n    .message-bubble {\n      padding: 10px 15px;\n      border-radius: 18px;\n    }\n\n    .message.sent {\n      align-self: flex-end;\n      text-align: right;\n    }\n    .message.sent .message-bubble {\n      background: #1976d2;\n      color: #fff;\n      border-bottom-right-radius: 4px;\n    }\n\n    .message.received {\n      align-self: flex-start;\n      text-align: left;\n    }\n    .message.received .message-bubble {\n       background: #e5e5ea;\n       color: #333;\n       border-bottom-left-radius: 4px;\n    }\n    \n    .message-timestamp {\n      font-size: 0.75em;\n      margin-top: 4px;\n      color: #999;\n    }\n    .message.sent .message-timestamp {\n        color: #e0e0e0;\n        opacity: 0.9;\n    }\n\n    .send-form-wrapper {\n      padding: 15px 20px;\n      border-top: 1px solid #eee;\n      background: #fdfdfd;\n    }\n\n    .send-form {\n      display: flex;\n      gap: 10px;\n    }\n\n    .send-form input {\n      flex-grow: 1;\n      padding: 10px;\n      border: 1px solid #ccc;\n      border-radius: 20px;\n      outline: none;\n      transition: border-color 0.2s;\n    }\n    .send-form input:focus {\n      border-color: #1976d2;\n    }\n\n    .send-form button {\n      padding: 10px 20px;\n      border: none;\n      background: #1976d2;\n      color: white;\n      border-radius: 20px;\n      cursor: pointer;\n      transition: background-color 0.2s;\n    }\n    .send-form button:hover {\n      background: #1565c0;\n    }\n    .send-form button:disabled {\n      background: #a0a0a0;\n      cursor: not-allowed;\n    }\n    \n    .welcome-screen {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n      text-align: center;\n      color: #aaa;\n    }\n    .welcome-screen h2 {\n      color: #555;\n      margin-bottom: 10px;\n    }\n    \n    /* Responsive adjustments */\n    @media (max-width: 768px) {\n      .chat-container-wrapper {\n        height: 100vh;\n        width: 100vw;\n        border-radius: 0;\n        border: none;\n        max-width: none;\n      }\n      .user-list {\n        position: absolute;\n        width: 280px;\n        height: 100%;\n        transform: translateX(-100%);\n        transition: transform 0.3s ease-in-out;\n        z-index: 10;\n        background: #fff;\n      }\n      .user-list.open {\n        transform: translateX(0);\n      }\n      .menu-toggle {\n        display: block;\n        margin-right: 10px;\n        cursor: pointer;\n      }\n    }\n  `\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this);\n_c = Style;\nconst MessageItem = ({\n  msg,\n  currentUser,\n  getDecryptedPrivateKey\n}) => {\n  _s();\n  const [decrypted, setDecrypted] = useState('');\n  useEffect(() => {\n    const decrypt = async () => {\n      if (msg.from === currentUser.username && msg.plaintext) {\n        setDecrypted(msg.plaintext);\n      } else {\n        try {\n          const privateKeyArmored = await getDecryptedPrivateKey();\n          const dec = await hybridDecryptMessage(msg.encryptedContent, msg.encryptedAESKey, privateKeyArmored);\n          setDecrypted(dec);\n        } catch {\n          setDecrypted('[Failed to decrypt]');\n        }\n      }\n    };\n    decrypt();\n  }, [msg, currentUser, getDecryptedPrivateKey]);\n  const isSent = msg.from === currentUser.username;\n  const messageClasses = isSent ? 'message sent' : 'message received';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: messageClasses,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-bubble\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: decrypted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-timestamp\",\n        children: new Date(msg.timestamp || Date.now()).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageItem, \"p5qMHw/IAbEL1ybyHdCYv2QSVmY=\");\n_c2 = MessageItem;\nconst ChatContainer = ({\n  currentUser,\n  showStatus\n}) => {\n  _s2();\n  const [isSidebarOpen, setSidebarOpen] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const decryptedPrivateKeyRef = useRef(null);\n  const passphraseRef = useRef('');\n  useEffect(() => {\n    usersAPI.getAllUsers().then(res => setUsers(res.data));\n  }, []);\n  useEffect(() => {\n    if (selectedUser) {\n      messagesAPI.getConversation(selectedUser.username).then(res => setMessages(res.data.slice().reverse()));\n      setSidebarOpen(false); // Close sidebar on selection (for mobile)\n    }\n  }, [selectedUser]);\n  const getDecryptedPrivateKey = async () => {\n    if (decryptedPrivateKeyRef.current) return decryptedPrivateKeyRef.current;\n    const passphrase = window.prompt('Enter your password to decrypt your private key:');\n    if (!passphrase) throw new Error(\"Operation cancelled.\");\n    passphraseRef.current = passphrase;\n    try {\n      // Logic restored to use localStorage as per original code\n      const encryptedPrivateKey = localStorage.getItem('privateKey');\n      const privateKeyArmored = await decryptPrivateKeyAES(encryptedPrivateKey, passphrase);\n      decryptedPrivateKeyRef.current = privateKeyArmored;\n      return privateKeyArmored;\n    } catch (err) {\n      showStatus('Failed to decrypt private key. Wrong password?', 'error');\n      passphraseRef.current = '';\n      throw err;\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    const trimmedInput = input.trim();\n    if (!trimmedInput || !selectedUser) return;\n    setLoading(true);\n    try {\n      const {\n        encryptedMessage,\n        encryptedAESKey\n      } = await hybridEncryptMessage(trimmedInput, selectedUser.publicKey);\n      const messageData = {\n        from: currentUser.username,\n        to: selectedUser.username,\n        encryptedContent: encryptedMessage,\n        encryptedAESKey,\n        messageType: 'text',\n        timestamp: Date.now(),\n        plaintext: trimmedInput\n      };\n      await messagesAPI.sendMessage(messageData);\n      setMessages(prev => [messageData, ...prev]);\n      getSocket().emit('send_message', messageData);\n      setInput('');\n    } catch (err) {\n      showStatus('Failed to send message. Please try again.', 'error');\n    }\n    setLoading(false);\n  };\n  const getAvatar = username => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"avatar\",\n    children: username.slice(0, 2).toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 9\n  }, this);\n  const getLastPreview = user => \"Click to view messages\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Style, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: `user-list ${isSidebarOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-list-header\",\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-list-body\",\n          children: users.filter(user => user.username !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username)).map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setSelectedUser(user),\n            className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.username) === user.username ? 'selected' : ''}`,\n            children: [getAvatar(user.username), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-name\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-preview\",\n                children: getLastPreview(user)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 33\n            }, this)]\n          }, user.username, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"chat-main\",\n        children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"menu-toggle\",\n              onClick: () => setSidebarOpen(!isSidebarOpen),\n              children: \"\\u2630\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 33\n            }, this), getAvatar(selectedUser.username), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-name\",\n                children: selectedUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-list-inner\",\n              children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(MessageItem, {\n                msg: msg,\n                currentUser: currentUser,\n                getDecryptedPrivateKey: getDecryptedPrivateKey\n              }, msg.timestamp || idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-form-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: sendMessage,\n              className: \"send-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: input,\n                onChange: e => setInput(e.target.value),\n                placeholder: \"Type a message...\",\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: loading || !input.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu-toggle\",\n            onClick: () => setSidebarOpen(!isSidebarOpen),\n            style: {\n              position: 'absolute',\n              top: '20px',\n              left: '20px'\n            },\n            children: \"\\u2630\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Welcome, \", (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || 'Guest']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a chat to start messaging.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s2(ChatContainer, \"I7YI8DYdHJno4xwbZVxmrUQdP0U=\");\n_c3 = ChatContainer;\nexport default ChatContainer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Style\");\n$RefreshReg$(_c2, \"MessageItem\");\n$RefreshReg$(_c3, \"ChatContainer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","usersAPI","getAllUsers","console","log","data","username","isOnline","publicKey","messagesAPI","getConversation","sendMessage","messageData","Promise","resolve","getSocket","on","event","callback","off","emit","hybridEncryptMessage","text","key","encryptedMessage","encryptedAESKey","hybridDecryptMessage","encrypted","aesKey","privateKey","startsWith","substring","length","decryptPrivateKeyAES","encryptedKey","passphrase","Error","Style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MessageItem","msg","currentUser","getDecryptedPrivateKey","_s","decrypted","setDecrypted","decrypt","from","plaintext","privateKeyArmored","dec","encryptedContent","isSent","messageClasses","className","Date","timestamp","now","toLocaleTimeString","hour","minute","_c2","ChatContainer","showStatus","_s2","isSidebarOpen","setSidebarOpen","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","input","setInput","loading","setLoading","decryptedPrivateKeyRef","passphraseRef","then","res","slice","reverse","current","window","prompt","encryptedPrivateKey","localStorage","getItem","err","e","preventDefault","trimmedInput","trim","to","messageType","prev","getAvatar","toUpperCase","getLastPreview","user","filter","map","onClick","idx","onSubmit","type","value","onChange","target","placeholder","autoComplete","disabled","style","position","top","left","_c3","$RefreshReg$"],"sources":["/home/rounak-dagar/securechat/frontend/src/components/Chat/ChatContainer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n// --- MOCK SERVICES ---\n// NOTE: To resolve the import errors, these are placeholder implementations\n// for the services that would exist in your app. Your original logic remains intact.\nconst usersAPI = {\n  getAllUsers: async () => {\n    console.log(\"Mock usersAPI.getAllUsers called\");\n    return { data: [\n        { username: 'Alice', isOnline: true, publicKey: 'key_alice' },\n        { username: 'Bob', isOnline: false, publicKey: 'key_bob' },\n    ] };\n  }\n};\n\nconst messagesAPI = {\n  getConversation: async (username) => {\n    console.log(`Mock messagesAPI.getConversation called for ${username}`);\n    return { data: [] };\n  },\n  sendMessage: async (messageData) => {\n    console.log(\"Mock messagesAPI.sendMessage called with:\", messageData);\n    return Promise.resolve();\n  }\n};\n\nconst getSocket = () => ({\n  on: (event, callback) => console.log(`Socket listener attached for: ${event}`),\n  off: (event) => console.log(`Socket listener detached for: ${event}`),\n  emit: (event, data) => console.log(`Socket emitting ${event}:`, data),\n});\n\nconst hybridEncryptMessage = async (text, key) => {\n    console.log(\"Mock hybridEncryptMessage called\");\n    return {\n        encryptedMessage: `encrypted(${text})`,\n        encryptedAESKey: 'mock_aes_key'\n    };\n};\n\nconst hybridDecryptMessage = async (encrypted, aesKey, privateKey) => {\n    console.log(\"Mock hybridDecryptMessage called\");\n    if (typeof encrypted === 'string' && encrypted.startsWith('encrypted(')) {\n        return encrypted.substring(10, encrypted.length - 1);\n    }\n    return '[Decrypted Message]';\n};\n\nconst decryptPrivateKeyAES = async (encryptedKey, passphrase) => {\n    console.log('Mock decryptPrivateKeyAES called');\n    if (passphrase) {\n        return '---BEGIN PGP PRIVATE KEY BLOCK---...';\n    }\n    throw new Error(\"Mock decryption failed\");\n};\n\n\n// --- STYLES ---\n// The component's styles have been updated to match the provided app.css file.\n// Additional styles have been added for elements not covered in the original CSS\n// to ensure a complete and polished UI, while respecting the light-theme design.\nconst Style = () => (\n  <style>{`\n    /* Base styles from your app.css */\n    .chat-container-wrapper {\n      font-family: Arial, sans-serif;\n      background: #fff;\n      border-radius: 8px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n      border: 1px solid #eee;\n      display: flex;\n      height: 80vh;\n      width: 100%;\n      max-width: 900px;\n      margin: 0 auto;\n      overflow: hidden;\n    }\n\n    .user-list {\n      width: 250px;\n      border-right: 1px solid #eee;\n      display: flex;\n      flex-direction: column;\n      background-color: #fcfcfc;\n    }\n    \n    .user-list-header {\n      padding: 15px;\n      font-size: 1.2rem;\n      font-weight: bold;\n      border-bottom: 1px solid #eee;\n      color: #333;\n    }\n\n    .user-list-body {\n      overflow-y: auto;\n      flex-grow: 1;\n    }\n    \n    .user-item {\n      display: flex;\n      align-items: center;\n      padding: 12px 15px;\n      cursor: pointer;\n      border-bottom: 1px solid #f0f0f0;\n      transition: background-color 0.2s;\n    }\n    \n    .user-item:hover {\n      background-color: #f1f1f1;\n    }\n\n    .user-item.selected {\n      background-color: #1976d2;\n      color: white;\n    }\n    .user-item.selected .user-name,\n    .user-item.selected .user-preview {\n      color: white;\n    }\n\n    .avatar {\n      width: 40px;\n      height: 40px;\n      border-radius: 50%;\n      background-color: #1976d2;\n      color: white;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-right: 12px;\n      font-weight: bold;\n    }\n    \n    .user-info {\n      overflow: hidden;\n    }\n\n    .user-name {\n      font-weight: bold;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .user-preview {\n      font-size: 0.85em;\n      color: #888;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .chat-main {\n      flex-grow: 1;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .chat-header {\n      display: flex;\n      align-items: center;\n      padding: 10px 20px;\n      border-bottom: 1px solid #eee;\n      background: #fdfdfd;\n    }\n    \n    .chat-header .user-name {\n      font-size: 1.1em;\n    }\n\n    .messages {\n      flex-grow: 1;\n      overflow-y: auto;\n      background: #fafafa;\n      padding: 20px;\n      display: flex;\n      flex-direction: column-reverse; /* To keep view at the bottom */\n    }\n    \n    .message-list-inner {\n      display: flex;\n      flex-direction: column;\n      gap: 12px;\n    }\n\n    .message {\n      display: flex;\n      max-width: 75%;\n    }\n\n    .message-bubble {\n      padding: 10px 15px;\n      border-radius: 18px;\n    }\n\n    .message.sent {\n      align-self: flex-end;\n      text-align: right;\n    }\n    .message.sent .message-bubble {\n      background: #1976d2;\n      color: #fff;\n      border-bottom-right-radius: 4px;\n    }\n\n    .message.received {\n      align-self: flex-start;\n      text-align: left;\n    }\n    .message.received .message-bubble {\n       background: #e5e5ea;\n       color: #333;\n       border-bottom-left-radius: 4px;\n    }\n    \n    .message-timestamp {\n      font-size: 0.75em;\n      margin-top: 4px;\n      color: #999;\n    }\n    .message.sent .message-timestamp {\n        color: #e0e0e0;\n        opacity: 0.9;\n    }\n\n    .send-form-wrapper {\n      padding: 15px 20px;\n      border-top: 1px solid #eee;\n      background: #fdfdfd;\n    }\n\n    .send-form {\n      display: flex;\n      gap: 10px;\n    }\n\n    .send-form input {\n      flex-grow: 1;\n      padding: 10px;\n      border: 1px solid #ccc;\n      border-radius: 20px;\n      outline: none;\n      transition: border-color 0.2s;\n    }\n    .send-form input:focus {\n      border-color: #1976d2;\n    }\n\n    .send-form button {\n      padding: 10px 20px;\n      border: none;\n      background: #1976d2;\n      color: white;\n      border-radius: 20px;\n      cursor: pointer;\n      transition: background-color 0.2s;\n    }\n    .send-form button:hover {\n      background: #1565c0;\n    }\n    .send-form button:disabled {\n      background: #a0a0a0;\n      cursor: not-allowed;\n    }\n    \n    .welcome-screen {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n      text-align: center;\n      color: #aaa;\n    }\n    .welcome-screen h2 {\n      color: #555;\n      margin-bottom: 10px;\n    }\n    \n    /* Responsive adjustments */\n    @media (max-width: 768px) {\n      .chat-container-wrapper {\n        height: 100vh;\n        width: 100vw;\n        border-radius: 0;\n        border: none;\n        max-width: none;\n      }\n      .user-list {\n        position: absolute;\n        width: 280px;\n        height: 100%;\n        transform: translateX(-100%);\n        transition: transform 0.3s ease-in-out;\n        z-index: 10;\n        background: #fff;\n      }\n      .user-list.open {\n        transform: translateX(0);\n      }\n      .menu-toggle {\n        display: block;\n        margin-right: 10px;\n        cursor: pointer;\n      }\n    }\n  `}</style>\n);\n\nconst MessageItem = ({ msg, currentUser, getDecryptedPrivateKey }) => {\n    const [decrypted, setDecrypted] = useState('');\n\n    useEffect(() => {\n        const decrypt = async () => {\n            if (msg.from === currentUser.username && msg.plaintext) {\n                setDecrypted(msg.plaintext);\n            } else {\n                try {\n                    const privateKeyArmored = await getDecryptedPrivateKey();\n                    const dec = await hybridDecryptMessage(msg.encryptedContent, msg.encryptedAESKey, privateKeyArmored);\n                    setDecrypted(dec);\n                } catch {\n                    setDecrypted('[Failed to decrypt]');\n                }\n            }\n        };\n        decrypt();\n    }, [msg, currentUser, getDecryptedPrivateKey]);\n\n    const isSent = msg.from === currentUser.username;\n    const messageClasses = isSent ? 'message sent' : 'message received';\n\n    return (\n        <div className={messageClasses}>\n            <div className=\"message-bubble\">\n                <p>{decrypted}</p>\n                <div className=\"message-timestamp\">\n                    {new Date(msg.timestamp || Date.now()).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst ChatContainer = ({ currentUser, showStatus }) => {\n    const [isSidebarOpen, setSidebarOpen] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n    const [loading, setLoading] = useState(false);\n    \n    const decryptedPrivateKeyRef = useRef(null);\n    const passphraseRef = useRef('');\n\n    useEffect(() => {\n        usersAPI.getAllUsers().then(res => setUsers(res.data));\n    }, []);\n\n    useEffect(() => {\n        if (selectedUser) {\n            messagesAPI.getConversation(selectedUser.username).then(res => setMessages(res.data.slice().reverse()));\n            setSidebarOpen(false); // Close sidebar on selection (for mobile)\n        }\n    }, [selectedUser]);\n\n    const getDecryptedPrivateKey = async () => {\n        if (decryptedPrivateKeyRef.current) return decryptedPrivateKeyRef.current;\n        const passphrase = window.prompt('Enter your password to decrypt your private key:');\n        if (!passphrase) throw new Error(\"Operation cancelled.\");\n        passphraseRef.current = passphrase;\n        \n        try {\n            // Logic restored to use localStorage as per original code\n            const encryptedPrivateKey = localStorage.getItem('privateKey');\n            const privateKeyArmored = await decryptPrivateKeyAES(encryptedPrivateKey, passphrase);\n            decryptedPrivateKeyRef.current = privateKeyArmored;\n            return privateKeyArmored;\n        } catch (err) {\n            showStatus('Failed to decrypt private key. Wrong password?', 'error');\n            passphraseRef.current = '';\n            throw err;\n        }\n    };\n\n    const sendMessage = async (e) => {\n        e.preventDefault();\n        const trimmedInput = input.trim();\n        if (!trimmedInput || !selectedUser) return;\n        setLoading(true);\n\n        try {\n            const { encryptedMessage, encryptedAESKey } = await hybridEncryptMessage(trimmedInput, selectedUser.publicKey);\n            const messageData = {\n                from: currentUser.username,\n                to: selectedUser.username,\n                encryptedContent: encryptedMessage,\n                encryptedAESKey,\n                messageType: 'text',\n                timestamp: Date.now(),\n                plaintext: trimmedInput \n            };\n            await messagesAPI.sendMessage(messageData);\n            setMessages(prev => [messageData, ...prev]);\n            getSocket().emit('send_message', messageData);\n            setInput('');\n        } catch (err) {\n            showStatus('Failed to send message. Please try again.', 'error');\n        }\n        setLoading(false);\n    };\n\n    const getAvatar = (username) => (\n        <div className=\"avatar\">\n            {username.slice(0, 2).toUpperCase()}\n        </div>\n    );\n\n    const getLastPreview = (user) => \"Click to view messages\";\n\n    return (\n        <>\n            <Style />\n            <div className=\"chat-container-wrapper\">\n                <aside className={`user-list ${isSidebarOpen ? 'open' : ''}`}>\n                    <div className=\"user-list-header\">Chats</div>\n                    <div className=\"user-list-body\">\n                        {users.filter(user => user.username !== currentUser?.username).map(user => (\n                            <div key={user.username} onClick={() => setSelectedUser(user)} className={`user-item ${selectedUser?.username === user.username ? 'selected' : ''}`}>\n                                {getAvatar(user.username)}\n                                <div className=\"user-info\">\n                                    <div className=\"user-name\">{user.username}</div>\n                                    <div className=\"user-preview\">{getLastPreview(user)}</div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </aside>\n\n                <main className=\"chat-main\">\n                    {selectedUser ? (\n                        <>\n                            <div className=\"chat-header\">\n                                <div className=\"menu-toggle\" onClick={() => setSidebarOpen(!isSidebarOpen)}>☰</div>\n                                {getAvatar(selectedUser.username)}\n                                <div className=\"user-info\">\n                                     <div className=\"user-name\">{selectedUser.username}</div>\n                                </div>\n                            </div>\n                            <div className=\"messages\">\n                                <div className=\"message-list-inner\">\n                                    {messages.map((msg, idx) => (\n                                        <MessageItem \n                                            key={msg.timestamp || idx}\n                                            msg={msg} \n                                            currentUser={currentUser} \n                                            getDecryptedPrivateKey={getDecryptedPrivateKey} \n                                        />\n                                    ))}\n                                </div>\n                            </div>\n                            <div className=\"send-form-wrapper\">\n                                <form onSubmit={sendMessage} className=\"send-form\">\n                                    <input\n                                        type=\"text\"\n                                        value={input}\n                                        onChange={e => setInput(e.target.value)}\n                                        placeholder=\"Type a message...\"\n                                        autoComplete=\"off\"\n                                    />\n                                    <button type=\"submit\" disabled={loading || !input.trim()}>\n                                        Send\n                                    </button>\n                                </form>\n                            </div>\n                        </>\n                    ) : (\n                        <div className=\"welcome-screen\">\n                             <div className=\"menu-toggle\" onClick={() => setSidebarOpen(!isSidebarOpen)} style={{position: 'absolute', top: '20px', left: '20px'}}>☰</div>\n                            <h2>Welcome, {currentUser?.username || 'Guest'}</h2>\n                            <p>Select a chat to start messaging.</p>\n                        </div>\n                    )}\n                </main>\n            </div>\n        </>\n    );\n};\n\nexport default ChatContainer;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
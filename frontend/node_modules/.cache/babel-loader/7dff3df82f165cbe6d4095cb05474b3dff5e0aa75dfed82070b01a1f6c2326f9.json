{"ast":null,"code":"var _jsxFileName = \"/home/rounak-dagar/securechat/frontend/src/components/Auth/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { authAPI } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin,\n  onShowRegister,\n  showStatus\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await authAPI.login({\n        username\n      });\n      // Prompt for password to store correct encrypted private key\n      const encryptedPrivateKey = window.prompt('Paste your encrypted private key for this user:');\n      if (encryptedPrivateKey) {\n        localStorage.setItem(`privateKey_${username}`, encryptedPrivateKey);\n        localStorage.setItem('privateKey', localStorage.getItem(`privateKey_${username}`));\n      } else {\n        showStatus('Login failed: No private key provided', 'error');\n        return;\n      }\n      onLogin(res.data.user, res.data.token);\n      showStatus('Login successful', 'success');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      showStatus(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed', 'error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      required: true,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password (for key decryption)\",\n      value: password,\n      required: true,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onShowRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","authAPI","jsxDEV","_jsxDEV","Login","onLogin","onShowRegister","showStatus","_s","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","res","login","encryptedPrivateKey","window","prompt","localStorage","setItem","getItem","data","user","token","err","_err$response","_err$response$data","response","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","required","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/home/rounak-dagar/securechat/frontend/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { authAPI } from '../../services/api';\n\nconst Login = ({ onLogin, onShowRegister, showStatus }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await authAPI.login({ username });\n      // Prompt for password to store correct encrypted private key\n      const encryptedPrivateKey = window.prompt('Paste your encrypted private key for this user:');\n      if (encryptedPrivateKey) {\n        localStorage.setItem(`privateKey_${username}`, encryptedPrivateKey);\n        localStorage.setItem('privateKey', localStorage.getItem(`privateKey_${username}`));\n      } else {\n        showStatus('Login failed: No private key provided', 'error');\n        return;\n      }\n      onLogin(res.data.user, res.data.token);\n      showStatus('Login successful', 'success');\n    } catch (err) {\n      showStatus(err.response?.data?.message || 'Login failed', 'error');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"login-form\">\n      <h2>Login</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        required\n        onChange={e => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password (for key decryption)\"\n        value={password}\n        required\n        onChange={e => setPassword(e.target.value)}\n      />\n      <button type=\"submit\">Login</button>\n      <p>\n        Don't have an account? <button type=\"button\" onClick={onShowRegister}>Register</button>\n      </p>\n    </form>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/rounak-dagar/securechat/frontend/src/components/Chat/ChatContainer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { usersAPI, messagesAPI } from '../../services/api';\nimport { hybridEncryptMessage, hybridDecryptMessage, decryptPrivateKeyAES } from '../../services/crypto';\nimport { getSocket } from '../../services/socket';\nimport { PaperAirplaneIcon, PhoneIcon, EllipsisVerticalIcon, MagnifyingGlassIcon, FaceSmileIcon, PaperClipIcon, UserCircleIcon, Bars3Icon } from '@heroicons/react/24/solid';\nimport './ChatContainer.css'; // The only addition is this import\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatContainer = ({\n  currentUser,\n  showStatus\n}) => {\n  _s();\n  // --- STATE FOR RESPONSIVENESS (LOGIC UNCHANGED) ---\n  const [isDesktop, setDesktop] = useState(window.innerWidth >= 768);\n  const [isSidebarOpen, setSidebarOpen] = useState(false);\n\n  // --- COMPONENT STATE (LOGIC UNCHANGED) ---\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // --- REFS (LOGIC UNCHANGED) ---\n  const decryptedPrivateKeyRef = useRef(null);\n  const passphraseRef = useRef('');\n\n  // --- EFFECT TO DETECT SCREEN SIZE (LOGIC UNCHANGED) ---\n  useEffect(() => {\n    const handleResize = () => setDesktop(window.innerWidth >= 768);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // --- DATA FETCHING & SOCKET EFFECTS (LOGIC UNCHANGED) ---\n  useEffect(() => {\n    usersAPI.getAllUsers().then(res => setUsers(res.data));\n  }, []);\n  useEffect(() => {\n    if (selectedUser) {\n      messagesAPI.getConversation(selectedUser.username).then(res => setMessages(res.data));\n      if (!isDesktop) {\n        setSidebarOpen(false);\n      }\n    }\n  }, [selectedUser, isDesktop]);\n  useEffect(() => {\n    const socket = getSocket();\n    if (!socket) return;\n    socket.on('receive_message', msg => {\n      if (msg.from === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.username) || msg.to === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.username)) {\n        setMessages(prev => [...prev, msg]);\n      }\n    });\n    return () => {\n      socket.off('receive_message');\n    };\n  }, [selectedUser]);\n\n  // --- CORE FUNCTIONS (LOGIC UNCHANGED) ---\n  const getDecryptedPrivateKey = async () => {\n    if (decryptedPrivateKeyRef.current) return decryptedPrivateKeyRef.current;\n    const encryptedPrivateKey = localStorage.getItem('privateKey');\n    let passphrase = passphraseRef.current;\n    if (!passphrase) {\n      passphrase = window.prompt('Enter your password to decrypt your private key:');\n      passphraseRef.current = passphrase;\n    }\n    try {\n      const privateKeyArmored = await decryptPrivateKeyAES(encryptedPrivateKey, passphrase);\n      decryptedPrivateKeyRef.current = privateKeyArmored;\n      return privateKeyArmored;\n    } catch (err) {\n      showStatus('Failed to decrypt private key. Wrong password?', 'error');\n      decryptedPrivateKeyRef.current = null;\n      passphraseRef.current = '';\n      throw err;\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!input || !selectedUser) return;\n    setLoading(true);\n    try {\n      const {\n        encryptedMessage,\n        encryptedAESKey\n      } = await hybridEncryptMessage(input, selectedUser.publicKey);\n      const messageData = {\n        to: selectedUser.username,\n        encryptedContent: encryptedMessage,\n        encryptedAESKey,\n        messageType: 'text'\n      };\n      await messagesAPI.sendMessage(messageData);\n      setMessages(prev => [...prev, {\n        from: currentUser.username,\n        to: selectedUser.username,\n        encryptedContent: encryptedMessage,\n        encryptedAESKey,\n        messageType: 'text',\n        plaintext: input\n      }]);\n      getSocket().emit('send_message', {\n        from: currentUser.username,\n        to: selectedUser.username,\n        encryptedContent: encryptedMessage,\n        encryptedAESKey,\n        messageType: 'text'\n      });\n      setInput('');\n      showStatus('Message sent', 'success');\n    } catch (err) {\n      showStatus('Failed to send message', 'error');\n    }\n    setLoading(false);\n  };\n\n  // --- HELPER FUNCTIONS (LOGIC UNCHANGED) ---\n  const getAvatar = username => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"avatar\",\n    children: username.slice(0, 2).toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n  const getLastPreview = user => \"Click to view messages\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `sidebar-wrapper ${isDesktop || isSidebarOpen ? 'sidebar-wrapper--open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"sidebar-header__title\",\n          children: \"SecureChat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"sidebar-search__input\",\n          placeholder: \"Search or start new chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MagnifyingGlassIcon, {\n          className: \"sidebar-search__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"user-list\",\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedUser(user),\n              className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.username) === user.username ? 'user-item--selected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: [user.username.slice(0, 2).toUpperCase(), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `avatar__status ${user.isOnline ? 'avatar__status--online' : 'avatar__status--offline'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-info__name\",\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-info__preview\",\n                  children: getLastPreview(user)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, user.username, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSidebarOpen(true),\n              className: \"menu-button\",\n              children: /*#__PURE__*/_jsxDEV(Bars3Icon, {\n                className: \"icon-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), getAvatar(selectedUser.username), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-header__name\",\n                children: selectedUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-header__status\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `chat-header__status-dot ${selectedUser.isOnline ? 'chat-header__status-dot--online' : 'chat-header__status-dot--offline'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), selectedUser.isOnline ? 'Online' : 'Offline']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header__actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list-container\",\n          children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(MessageItem, {\n            msg: msg,\n            currentUser: currentUser,\n            getDecryptedPrivateKey: getDecryptedPrivateKey\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          className: \"message-form\",\n          children: [\"value=\", input, \"onChange=\", e => setInput(e.target.value), \"placeholder=\\\"Type a message...\\\" required rows=\", 1, \"className=\\\"message-form__textarea\\\" />\", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading || !input,\n            className: \"message-form__submit\",\n            children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n              className: \"icon-submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSidebarOpen(true),\n          className: \"menu-button\",\n          children: /*#__PURE__*/_jsxDEV(Bars3Icon, {\n            className: \"icon-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UserCircleIcon, {\n          className: \"welcome-screen__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"welcome-screen__title\",\n          children: \"Welcome to SecureChat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"welcome-screen__subtitle\",\n          children: \"Select a user to begin a secure conversation.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"1KYotX31xIH5vdjWcsPuiyVeNEA=\");\n_c = ChatContainer;\nconst MessageItem = ({\n  msg,\n  currentUser,\n  getDecryptedPrivateKey\n}) => {\n  _s2();\n  const [decrypted, setDecrypted] = useState('');\n  useEffect(() => {\n    const decrypt = async () => {\n      if (msg.from === currentUser.username && msg.plaintext) {\n        setDecrypted(msg.plaintext);\n      } else {\n        try {\n          const privateKeyArmored = await getDecryptedPrivateKey();\n          const dec = await hybridDecryptMessage(msg.encryptedContent, msg.encryptedAESKey, privateKeyArmored);\n          setDecrypted(dec);\n        } catch {\n          setDecrypted('[Encrypted]');\n        }\n      }\n    };\n    decrypt();\n  }, [msg, currentUser, getDecryptedPrivateKey]);\n  const isSent = msg.from === currentUser.username;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message-item-wrapper ${isSent ? 'message-item-wrapper--sent' : 'message-item-wrapper--received'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-bubble ${isSent ? 'message-bubble--sent' : 'message-bubble--received'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: decrypted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-timestamp\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(msg.timestamp || Date.now()).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s2(MessageItem, \"p5qMHw/IAbEL1ybyHdCYv2QSVmY=\");\n_c2 = MessageItem;\nexport default ChatContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"MessageItem\");","map":{"version":3,"names":["React","useState","useEffect","useRef","usersAPI","messagesAPI","hybridEncryptMessage","hybridDecryptMessage","decryptPrivateKeyAES","getSocket","PaperAirplaneIcon","PhoneIcon","EllipsisVerticalIcon","MagnifyingGlassIcon","FaceSmileIcon","PaperClipIcon","UserCircleIcon","Bars3Icon","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatContainer","currentUser","showStatus","_s","isDesktop","setDesktop","window","innerWidth","isSidebarOpen","setSidebarOpen","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","input","setInput","loading","setLoading","decryptedPrivateKeyRef","passphraseRef","handleResize","addEventListener","removeEventListener","getAllUsers","then","res","data","getConversation","username","socket","on","msg","from","to","prev","off","getDecryptedPrivateKey","current","encryptedPrivateKey","localStorage","getItem","passphrase","prompt","privateKeyArmored","err","sendMessage","e","preventDefault","encryptedMessage","encryptedAESKey","publicKey","messageData","encryptedContent","messageType","plaintext","emit","getAvatar","className","children","slice","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","getLastPreview","user","type","placeholder","map","onClick","isOnline","idx","MessageItem","onSubmit","target","value","disabled","_c","_s2","decrypted","setDecrypted","decrypt","dec","isSent","Date","timestamp","now","toLocaleTimeString","hour","minute","_c2","$RefreshReg$"],"sources":["/home/rounak-dagar/securechat/frontend/src/components/Chat/ChatContainer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { usersAPI, messagesAPI } from '../../services/api';\nimport { hybridEncryptMessage, hybridDecryptMessage, decryptPrivateKeyAES } from '../../services/crypto';\nimport { getSocket } from '../../services/socket';\nimport { PaperAirplaneIcon, PhoneIcon, EllipsisVerticalIcon, MagnifyingGlassIcon, FaceSmileIcon, PaperClipIcon, UserCircleIcon, Bars3Icon } from '@heroicons/react/24/solid';\nimport './ChatContainer.css'; // The only addition is this import\n\nconst ChatContainer = ({ currentUser, showStatus }) => {\n  // --- STATE FOR RESPONSIVENESS (LOGIC UNCHANGED) ---\n  const [isDesktop, setDesktop] = useState(window.innerWidth >= 768);\n  const [isSidebarOpen, setSidebarOpen] = useState(false);\n\n  // --- COMPONENT STATE (LOGIC UNCHANGED) ---\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // --- REFS (LOGIC UNCHANGED) ---\n  const decryptedPrivateKeyRef = useRef(null);\n  const passphraseRef = useRef('');\n\n  // --- EFFECT TO DETECT SCREEN SIZE (LOGIC UNCHANGED) ---\n  useEffect(() => {\n    const handleResize = () => setDesktop(window.innerWidth >= 768);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // --- DATA FETCHING & SOCKET EFFECTS (LOGIC UNCHANGED) ---\n  useEffect(() => {\n    usersAPI.getAllUsers().then(res => setUsers(res.data));\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser) {\n      messagesAPI.getConversation(selectedUser.username).then(res => setMessages(res.data));\n      if (!isDesktop) {\n        setSidebarOpen(false);\n      }\n    }\n  }, [selectedUser, isDesktop]);\n\n  useEffect(() => {\n    const socket = getSocket();\n    if (!socket) return;\n    socket.on('receive_message', (msg) => {\n      if (msg.from === selectedUser?.username || msg.to === selectedUser?.username) {\n        setMessages(prev => [...prev, msg]);\n      }\n    });\n    return () => {\n      socket.off('receive_message');\n    };\n  }, [selectedUser]);\n\n  // --- CORE FUNCTIONS (LOGIC UNCHANGED) ---\n  const getDecryptedPrivateKey = async () => {\n    if (decryptedPrivateKeyRef.current) return decryptedPrivateKeyRef.current;\n    const encryptedPrivateKey = localStorage.getItem('privateKey');\n    let passphrase = passphraseRef.current;\n    if (!passphrase) {\n      passphrase = window.prompt('Enter your password to decrypt your private key:');\n      passphraseRef.current = passphrase;\n    }\n    try {\n      const privateKeyArmored = await decryptPrivateKeyAES(encryptedPrivateKey, passphrase);\n      decryptedPrivateKeyRef.current = privateKeyArmored;\n      return privateKeyArmored;\n    } catch (err) {\n      showStatus('Failed to decrypt private key. Wrong password?', 'error');\n      decryptedPrivateKeyRef.current = null;\n      passphraseRef.current = '';\n      throw err;\n    }\n  };\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!input || !selectedUser) return;\n    setLoading(true);\n    try {\n      const { encryptedMessage, encryptedAESKey } = await hybridEncryptMessage(input, selectedUser.publicKey);\n      const messageData = {\n        to: selectedUser.username,\n        encryptedContent: encryptedMessage,\n        encryptedAESKey,\n        messageType: 'text'\n      };\n      await messagesAPI.sendMessage(messageData);\n      setMessages(prev => [\n        ...prev,\n        {\n          from: currentUser.username,\n          to: selectedUser.username,\n          encryptedContent: encryptedMessage,\n          encryptedAESKey,\n          messageType: 'text',\n          plaintext: input\n        }\n      ]);\n      getSocket().emit('send_message', {\n        from: currentUser.username,\n        to: selectedUser.username,\n        encryptedContent: encryptedMessage,\n        encryptedAESKey,\n        messageType: 'text'\n      });\n      setInput('');\n      showStatus('Message sent', 'success');\n    } catch (err) {\n      showStatus('Failed to send message', 'error');\n    }\n    setLoading(false);\n  };\n\n  // --- HELPER FUNCTIONS (LOGIC UNCHANGED) ---\n  const getAvatar = (username) => (\n    <div className=\"avatar\">\n      {username.slice(0, 2).toUpperCase()}\n    </div>\n  );\n  \n  const getLastPreview = (user) => \"Click to view messages\";\n  \n  return (\n    <div className=\"chat-container\">\n      <aside className={`sidebar-wrapper ${isDesktop || isSidebarOpen ? 'sidebar-wrapper--open' : ''}`}>\n        <div className=\"sidebar-header\">\n          <h1 className=\"sidebar-header__title\">SecureChat</h1>\n        </div>\n        <div className=\"sidebar-search\">\n          <input type=\"text\" className=\"sidebar-search__input\" placeholder=\"Search or start new chat\" />\n          <MagnifyingGlassIcon className=\"sidebar-search__icon\" />\n        </div>\n        <div className=\"user-list-container\">\n          <ul className=\"user-list\">\n            {users.map(user => (\n              <li key={user.username}>\n                <button \n                  onClick={() => setSelectedUser(user)} \n                  className={`user-item ${selectedUser?.username === user.username ? 'user-item--selected' : ''}`}\n                >\n                  <div className=\"avatar\">\n                    {user.username.slice(0, 2).toUpperCase()}\n                    <span className={`avatar__status ${user.isOnline ? 'avatar__status--online' : 'avatar__status--offline'}`}></span>\n                  </div>\n                  <div className=\"user-info\">\n                    <div className=\"user-info__name\">{user.username}</div>\n                    <div className=\"user-info__preview\">{getLastPreview(user)}</div>\n                  </div>\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </aside>\n\n      <main className=\"main-content\">\n        {selectedUser ? (\n          <>\n            <div className=\"chat-header\">\n              <div className=\"chat-header__left\">\n                <button onClick={() => setSidebarOpen(true)} className=\"menu-button\">\n                  <Bars3Icon className=\"icon-md\" />\n                </button>\n                {getAvatar(selectedUser.username)}\n                <div>\n                  <div className=\"chat-header__name\">{selectedUser.username}</div>\n                  <div className=\"chat-header__status\">\n                    <span className={`chat-header__status-dot ${selectedUser.isOnline ? 'chat-header__status-dot--online' : 'chat-header__status-dot--offline'}`}></span>\n                    {selectedUser.isOnline ? 'Online' : 'Offline'}\n                  </div>\n                </div>\n              </div>\n              <div className=\"chat-header__actions\">\n                {/* <button className=\"icon-button\"><PhoneIcon className=\"icon-sm\" /></button>\n                <button className=\"icon-button\"><EllipsisVerticalIcon className=\"icon-sm\" /></button> */}\n              </div>\n            </div>\n\n            <div className=\"message-list-container\">\n              {messages.map((msg, idx) => (<MessageItem key={idx} msg={msg} currentUser={currentUser} getDecryptedPrivateKey={getDecryptedPrivateKey} />))}\n            </div>\n\n            <form onSubmit={sendMessage} className=\"message-form\">\n              {/* <button type=\"button\" className=\"icon-button\"><FaceSmileIcon className=\"icon-md\" /></button>\n              <button type=\"button\" className=\"icon-button\"><PaperClipIcon className=\"icon-md\" /></button>\n              <textarea  */}\n                value={input} \n                onChange={e => setInput(e.target.value)} \n                placeholder=\"Type a message...\" \n                required \n                rows={1} \n                className=\"message-form__textarea\"\n              />\n              <button type=\"submit\" disabled={loading || !input} className=\"message-form__submit\">\n                <PaperAirplaneIcon className=\"icon-submit\" />\n              </button>\n            </form>\n          </>\n        ) : (\n          <div className=\"welcome-screen\">\n            <button onClick={() => setSidebarOpen(true)} className=\"menu-button\">\n              <Bars3Icon className=\"icon-md\" />\n            </button>\n            <UserCircleIcon className=\"welcome-screen__icon\"/>\n            <h2 className=\"welcome-screen__title\">Welcome to SecureChat</h2>\n            <p className=\"welcome-screen__subtitle\">Select a user to begin a secure conversation.</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nconst MessageItem = ({ msg, currentUser, getDecryptedPrivateKey }) => {\n  const [decrypted, setDecrypted] = useState('');\n\n  useEffect(() => {\n    const decrypt = async () => {\n      if (msg.from === currentUser.username && msg.plaintext) {\n        setDecrypted(msg.plaintext);\n      } else {\n        try {\n          const privateKeyArmored = await getDecryptedPrivateKey();\n          const dec = await hybridDecryptMessage(msg.encryptedContent, msg.encryptedAESKey, privateKeyArmored);\n          setDecrypted(dec);\n        } catch {\n          setDecrypted('[Encrypted]');\n        }\n      }\n    };\n    decrypt();\n  }, [msg, currentUser, getDecryptedPrivateKey]);\n\n  const isSent = msg.from === currentUser.username;\n\n  return (\n    <div className={`message-item-wrapper ${isSent ? 'message-item-wrapper--sent' : 'message-item-wrapper--received'}`}>\n      <div className={`message-bubble ${isSent ? 'message-bubble--sent' : 'message-bubble--received'}`}>\n        <p>{decrypted}</p>\n        <div className=\"message-timestamp\">\n          <span>{new Date(msg.timestamp || Date.now()).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}